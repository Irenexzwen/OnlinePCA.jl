"""
    hvg(slfile, rowmeanlist, rowvarlist, rowcv2list, outdir)

This function perform highly variable genes, which is an feature selection method in scRNA-seq studies.

Input Arguments
---------
- `slfile` is a Julia Binary file generated by `csv2sl` function.
- `rowmeanlist` : The mean of each row of matrix. The CSV file is generated by `sumr` functions.
- `rowvarlist` : The variance of each row of matrix. The CSV file is generated by `sumr` functions.
- `rowcv2list` : The cv2 of each row of matrix. The CSV file is generated by `sumr` functions.
- `outdir` : The directory specified the directory you want to save the result.

Output files
---------
- `HVG_useForFit.csv` : Parameters to estimate the highly variable genes.
- `HVG_a0.csv` : Parameters to estimate the highly variable genes.
- `HVG_a1.csv` : Parameters to estimate the highly variable genes.
- `HVG_afits.csv` : Parameters to estimate the highly variable genes.
- `HVG_varFitRatio.csv` : Parameters to estimate the highly variable genes.
- `HVG_df.csv` : Parameters to estimate the highly variable genes.
- `HVG_pval.csv` : Parameters to estimate the highly variable genes.

Reference
---------
- [Highly Variable Genes](http://pklab.med.harvard.edu/scw2014/subpop_tutorial.html)
"""
function hvg(slfile, rowmeanlist, rowvarlist, rowcv2list, outdir)
    # Initialization
    N, M = init(slfile)

    println(typeof(slfile))
    println(typeof(rowmeanlist))
    println(typeof(rowvarlist))
    println(typeof(rowcv2list))
    println(typeof(outdir))

    rowmeanlist = readcsv(rowmeanlist)
    rowvarlist = readcsv(rowvarlist)
    rowcv2list = readcsv(rowcv2list)

    useForFit = []
    pm = []
    counter = 0
    pval = ones(N)
    for n = 1:N
        if rowcv2list[n] > 0.3
            counter = counter + 1
            push!(pm, n)
        end
    end
    thr = percentile(rowmeanlist[pm], 50)
    for n = 1:N
        if rowmeanlist[n] >= thr
            push!(useForFit, n)
        end
    end

    # Fitting
	println("Highly Variable Genes are calculated...")
    data = DataFrame(Y=rowcv2list[useForFit], X=1./rowmeanlist[useForFit])
    fit = glm(@formula(Y ~ X), data, Gamma(), IdentityLink())
    a0, a1 = coef(fit)
    afit = a1 ./ rowmeanlist .+ a0
    varFitRatio = rowvarlist ./ (afit .* rowmeanlist .* rowmeanlist)
    df = M - 1

    # P-value
    for n = 1:N
        pval[n] = ccdf(Chisq(df), varFitRatio[n]*df)
    end

    # Save
    writecsv(outdir*"/HVG_useForFit.csv", useForFit)
    writecsv(outdir*"/HVG_a0.csv", a0)
    writecsv(outdir*"/HVG_a1.csv", a1)
    writecsv(outdir*"/HVG_afit.csv", afit)
    writecsv(outdir*"/HVG_varFitRatio.csv", varFitRatio)
    writecsv(outdir*"/HVG_df.csv", df)
    writecsv(outdir*"/HVG_pval.csv", pval)
end

